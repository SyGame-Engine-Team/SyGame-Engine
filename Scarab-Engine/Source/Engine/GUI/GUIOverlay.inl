/////////////////////////////////////////////////////////////////////////////////
// File : Engine/GUI/GUIOverlay.inl
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : Non-Hierarchic, Overlayed items (menus, tooltips, ...)
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None.
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// GUIOverlayModel implementation

/////////////////////////////////////////////////////////////////////////////////

inline GUIOverlay * GUIOverlayModel::_GetOverlay() const {
    return (GUIOverlay*)m_pEventProcessor;
}

/////////////////////////////////////////////////////////////////////////////////
// GUIOverlay implementation
inline GUIOverlayType GUIOverlay::GetType() const {
    return GUIOVERLAY_UNDEFINED;
}

inline const Rectangle2 & GUIOverlay::GetOverlayRect() const {
    return m_rectOverlay;
}
inline UInt GUIOverlay::GetDepth() const {
    return m_iDepth;
}

inline Bool GUIOverlay::IsVisible() const {
    return m_bIsVisible;
}
inline Void GUIOverlay::SetVisible( Bool bVisible ) {
    m_bIsVisible = bVisible;
}

/////////////////////////////////////////////////////////////////////////////////

inline GUIOverlayModel * GUIOverlay::_GetOverlayModel() const {
    return (GUIOverlayModel*)m_pModel;
}

/////////////////////////////////////////////////////////////////////////////////

inline Void GUIOverlay::_ToLocalCoords( Point2 * outLocalPos, const Point2 & ptScreenPos ) const {
    ScreenToLocal( outLocalPos, ptScreenPos );
}

