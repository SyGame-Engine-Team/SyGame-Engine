/////////////////////////////////////////////////////////////////////////////////
// File : Engine/Physics/Bodies/Systems/RagDoll.cpp
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : Skeleton : Dynamic rigid bodies
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Includes
#include "RagDoll.h"

#include "../../PhysicsManager.h"

/////////////////////////////////////////////////////////////////////////////////
// RagDoll implementation
RagDoll::RagDoll( UInt iBoneCount, UInt iJointCount ):
    SystemBody()
{
    PhysicsFn->SelectMemory( TEXT("Bodies") );

    m_iBoneCount = iBoneCount;
    m_arrBones = New RigidBody*[m_iBoneCount];

    m_iJointCount = iJointCount;
    m_arrJoints = New JointConstraint*[m_iJointCount];

    PhysicsFn->UnSelectMemory();
}
RagDoll::~RagDoll()
{
    PhysicsFn->SelectMemory( TEXT("Bodies") );

    DeleteA( m_arrJoints );
    DeleteA( m_arrBones );

    PhysicsFn->UnSelectMemory();
}

Void RagDoll::Update( Scalar /*fTimeStep*/ )
{
    ///////////////
}

