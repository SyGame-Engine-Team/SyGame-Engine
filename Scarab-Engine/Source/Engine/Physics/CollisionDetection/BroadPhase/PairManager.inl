/////////////////////////////////////////////////////////////////////////////////
// File : Engine/Physics/CollisionDetection/BroadPhase/PairManager.inl
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : Generic pair-manager for incremental event-based notification.
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// BatchedNodePair implementation
inline Int BatchedNodePair::_Compare( const BatchedNodePair & leftPair, const BatchedNodePair & rightPair, Void * /*pUserData*/ ) {
    if ( leftPair.pNodeA < rightPair.pNodeA )
        return +1;
    if ( rightPair.pNodeA < leftPair.pNodeA )
        return -1;
    if ( leftPair.pNodeB < rightPair.pNodeB )
        return +1;
    if ( rightPair.pNodeB < leftPair.pNodeB )
        return -1;
    return 0;
}

/////////////////////////////////////////////////////////////////////////////////
// PairManager implementation
inline Void PairManager::SwitchListener( PairListener * pPairListener ) {
    Assert( pPairListener != NULL );
    m_pListener = pPairListener;
}


