/////////////////////////////////////////////////////////////////////////////////
// File : Engine/Physics/Shape/Shape.cpp
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : Collision shape abstraction
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None.
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Includes
#include "Shape.h"

#include "../PhysicsManager.h"

/////////////////////////////////////////////////////////////////////////////////
// Shape implementation
Shape::Shape( Mesh * pMesh ):
    m_bvLocalAAB()
{
    m_pMesh = pMesh;
}
Shape::~Shape()
{
    // nothing to do
}

/////////////////////////////////////////////////////////////////////////////////
// ShapeConvex implementation
ShapeConvex::ShapeConvex( Mesh * pMesh ):
    Shape( pMesh )
{
    // nothing to do
}
ShapeConvex::~ShapeConvex()
{
    // nothing to do
}

/////////////////////////////////////////////////////////////////////////////////
// ShapeConcave implementation
ShapeConcave::ShapeConcave( Mesh * pMesh ):
    Shape( pMesh )
{
    // nothing to do
}
ShapeConcave::~ShapeConcave()
{
    // nothing to do
}

ShapeConcave::HNodeQuery::HNodeQuery():
    AABoxTree::HCollider()
{
    // nothing to do
}
ShapeConcave::HNodeQuery::~HNodeQuery()
{
    // nothing to do
}

ShapeConcave::HTriangleQuery::HTriangleQuery():
    AABoxTree::HCollider()
{
    // nothing to do
}
ShapeConcave::HTriangleQuery::~HTriangleQuery()
{
    // nothing to do
}

