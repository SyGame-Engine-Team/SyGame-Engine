/////////////////////////////////////////////////////////////////////////////////
// File : Lib/Error/ErrorManager.inl
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : A general purpose manager for error tracking
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None.
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// ErrorManager implementation
inline ErrorManager * ErrorManager::GetInstancePtr() {
    static ErrorManager s_Instance;
    return &s_Instance;
}

/////////////////////////////////////////////////////////////////////////////////

inline ErrorContext * ErrorManager::_GetContext( ErrorContextID idContext ) {
    if ( idContext == ERROR_CONTEXT_SHARED )
        return &m_errorSharedContext;
    else {
        if ( idContext >= ERROR_MAX_CONTEXTS )
            return NULL;
        if ( m_arrContexts[idContext].idContext != idContext )
            return NULL;
        return &( m_arrContexts[idContext] );
    }
}