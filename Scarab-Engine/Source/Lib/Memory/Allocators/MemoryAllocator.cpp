/////////////////////////////////////////////////////////////////////////////////
// File : Lib/Memory/Allocators/MemoryAllocator.cpp
/////////////////////////////////////////////////////////////////////////////////
// Version : 1.0a
// Began Code : 29/05/2010
// Status : Alpha
// Portability : Any
/////////////////////////////////////////////////////////////////////////////////
// Description : Base interface for allocators to comply with the manager.
/////////////////////////////////////////////////////////////////////////////////
// Part of Scarab-Engine, licensed under the
// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License
//   http://creativecommons.org/licenses/by-nc-nd/3.0/
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Known Bugs : None.
/////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////
// Includes
#include "MemoryAllocator.h"

///////////////////////////////////////////////////////////////////////////////
// MemoryAllocator implementation
MemoryAllocator::MemoryAllocator( UInt iContextID, const GChar * strContextName,
                                  UInt iAllocatorID, const GChar * strAllocatorName )
{
    m_idContext = iContextID;
    StringFn->NCopy( m_strContextName, strContextName, MEMORY_MAX_NAMELENGTH - 1 );
    m_idAllocator = iAllocatorID;
    StringFn->NCopy( m_strAllocatorName, strAllocatorName, MEMORY_MAX_NAMELENGTH - 1 );
}
MemoryAllocator::~MemoryAllocator()
{
    // nothing to do
}
